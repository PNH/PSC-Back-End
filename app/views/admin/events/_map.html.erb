<script src="//maps.google.com/maps/api/js?v=3.26&key=<%= Rails.application.secrets.google_map_api_key %>"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<script type="text/javascript">
// var handler2;
// var map_marker;

var map = null;
function initialize() {
  var lat = document.getElementById("event_event_location_attributes_latitude");
  var long = document.getElementById("event_event_location_attributes_longitude");

  var myLatlng = new google.maps.LatLng(39.7392,-104.985);
  var mapOptions = {
    zoom: 4,
    center: myLatlng
  }
  map = new google.maps.Map(document.getElementById('map'), mapOptions);

  if (lat && long) {
    if (Math.abs(parseFloat(lat.value)) > 0 && Math.abs(parseFloat(long.value)) > 0) {
      if (map !== null) {
        var pt = new google.maps.LatLng(parseFloat(lat.value), parseFloat(long.value));
        map.setCenter(pt);
        map.setZoom(16);
        var marker = new google.maps.Marker({
          position: pt,
          map: map,
        });
      }
    }
  }
}

function find_address() {
  var address = [];
  var country = $('#event_event_location_attributes_country').val();
  var state = $('#event_event_location_attributes_state').val();
  var city = $('#event_event_location_attributes_city').val();
  var street = $('#event_event_location_attributes_street').val();
  var zipcode = $('#event_event_location_attributes_zipcode').val();

  if(street && street.length > 0) {address.push(street)}
  if(city && city.length > 0) {address.push(city)}
  if(state && state.length > 0) {address.push(state)}
  if(country && country.length > 0) {address.push(country)}
  if(zipcode && zipcode.length > 0) {address.push(zipcode)}

  if (address.length > 1 && (address_previous != address.join()))
  {
    geocoder.geocode( { 'address': address.join()}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        if (map !== null) {
          var pt = results[0].geometry.location;
          map.setCenter(pt);
          map.setZoom(16);
          var marker = new google.maps.Marker({
            position: pt,
            map: map,
          });
        }
        address_previous = address.join();
        $('#event_event_location_attributes_latitude').val(results[0].geometry.location.lat());
        $('#event_event_location_attributes_longitude').val(results[0].geometry.location.lng());

      } else {
        address_previous = address.join();
        //alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
}


var geocoder = "";
var address_previous = '';
$(document).ready(function() {

  var lat = <%= !resource.event_location.nil? ? resource.event_location.latitude : '0' %>;
  var long = <%= !resource.event_location.nil? ? resource.event_location.latitude : '0' %>;

  $( "#event_event_location_attributes_country" ).change(find_address);
  $( "#event_event_location_attributes_state" ).change(find_address);
  $( "#event_event_location_attributes_city" ).change(find_address);
  $( "#event_event_location_attributes_street" ).change(find_address);
  $( "#event_event_location_attributes_zipcode" ).change(find_address);

  geocoder= new google.maps.Geocoder();
  google.maps.event.addDomListener(window, 'load', initialize);

  if (lat && long) {
    if (Math.abs(parseFloat(lat)) > 0 && Math.abs(parseFloat(long)) > 0) {
      // do nothing....
    } else {
      setInterval(function(){
        find_address();
      },1000);
    }
  }

  getCountries();
});

function getCountries() {
  var _countryPicker = $("#event_event_location_attributes_country");
  $.ajax({
     type: "GET",
     dataType: "json",
     url: "/api/v1/events/countries",
     success: function(data){
       loadCountryList(data);
     }
  });

  function loadCountryList(data) {

    var _selected_country = "<%= !resource.event_location.nil? ? resource.event_location.country.to_s : 0 %>";

    _countryPicker.empty();
    if (data.status == 200) {
      var options = []

      data.content.forEach( function(country) {
        options.push(
          {
            id: country.code,
            text: country.name
          }
        );
        if (_selected_country.toUpperCase() == country.code) {
          _countryPicker.append($("<option selected=''></option>").attr("value", country.code).text(country.name));
        } else {
          _countryPicker.append($("<option></option>").attr("value", country.code).text(country.name));
        }

      });

      $('select').select2();

      if (_selected_country != "0") {
        getStates(_selected_country);
      }

      _countryPicker.change( function (evt) {
        // Do something
        getStates(_countryPicker.val());
      });

    } else {
      alert(data.message);
    }
  }
}

function getStates(country_code) {
  var _statePicker = $("#event_event_location_attributes_state");
  $.ajax({
     type: "GET",
     dataType: "json",
     url: "/api/v1/events/countries/" + country_code,
     success: function(data){
       loadStates(data);
     }
  });

  function loadStates(data) {

    var _selected_state = "<%= !resource.event_location.nil? ? resource.event_location.state.to_s : 0 %>";

    _statePicker.empty();
    if (data.status == 200) {
      var options = []
      var selectedOpy = null;
      data.content.forEach( function(state) {
        options.push(
          {
            id: state.code,
            text: state.name
          }
        );
        if (_selected_state.toUpperCase() == state.code.toUpperCase()) {
          _statePicker.append($("<option selected=''></option>").attr("value", state.code).text(state.name));
        } else {
          _statePicker.append($("<option></option>").attr("value", state.code).text(state.name));
        }

      });

      $('select').select2();

      _statePicker.change( function (evt) {
        // Do something
      });
    }
  }
}

</script>
<li id="event-gmap" class="google-map location-pointer">
  <label class="map-label">Map</label>
  <div class="event-map-container">

    <div id="map" style='width: 100%; height: 400px;'></div>
  </div>
</li>
